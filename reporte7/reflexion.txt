Trabajar en esta práctica me dejó varias reflexiones sobre lo que significa desarrollar aplicaciones o sistemas hoy en día con el apoyo de herramientas de inteligencia artificial. Lo primero es reconocer que la IA verdaderamente puede acelerar mucho la parte técnica, pero eso no quita la necesidad de entender lo que está pasando y como se está realizando. Cada endpoint, cada token y cada respuesta de la base de datos son piezas que hay que interpretar y comprender, porque si uno se limita a copiar y pegar código, se pierde el verdadero aprendizaje y más adelante cuando llegue la depuración no podrá resolver los detalles o errores que se presenten.
Me quedó muy claro el valor de la autenticación basada en tokens, más allá del código, comprendí el concepto de “vida útil” de un access token y por qué se complementa con un refresh token. Esto me llevó a pensar en la seguridad como algo que es como dinámico, no basta simplemente con proteger una ruta, hay que planear cómo se renuevan las credenciales, qué pasa si alguien llegara a robarlas y cómo reaccionará el sistema que desarrollamos. 
Otro aprendizaje importante fue el papel de la interoperabilidad, el consumir datos en diferentes formatos en este caso JSON para autenticación y XML para libros me hizo valorar la importancia de los estándares y de cómo el cliente tiene que adaptarse a lo que el servidor entrega. También entendí que el construir software robusto implica tener que lidiar con la diversidad y pensar en transformaciones, validaciones y la compatibilidad.
Por último, lo que se me hizo más interesante fue sentir que la IA no reemplazó mi forma de desarrollar y pensar como funcionara, sino que me obligó a cuestionar lo que me estaba proponiendo. Ese ejercicio de contrastar, por ejemplo (es seguro, funcionara de esta manera) me parece el verdadero valor: no delegar la responsabilidad, sino aprender a dialogar con la tecnología para crecer como desarrollador y como pensador crítico.
